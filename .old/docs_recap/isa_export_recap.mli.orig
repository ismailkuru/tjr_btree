module Prelude :
  sig
    type min_size_t =
      Tjr_btree.Isa_export.Prelude.min_size_t =
        Small_root_node_or_leaf
      | Small_node
      | Small_leaf
    type 'a constants_ext =
      'a Tjr_btree.Isa_export.Prelude.constants_ext =
        Constants_ext of Tjr_btree.Isa_export.Arith.nat *
          Tjr_btree.Isa_export.Arith.nat * Tjr_btree.Isa_export.Arith.nat *
          Tjr_btree.Isa_export.Arith.nat * 'a
    val max_leaf_size : 'a constants_ext -> Tjr_btree.Isa_export.Arith.nat
    val max_node_keys : 'a constants_ext -> Tjr_btree.Isa_export.Arith.nat
    val min_leaf_size : 'a constants_ext -> Tjr_btree.Isa_export.Arith.nat
    val min_node_keys : 'a constants_ext -> Tjr_btree.Isa_export.Arith.nat
  end
module Tree :
  sig
    type ('a, 'b) tree =
      ('a, 'b) Tjr_btree.Isa_export.Tree.tree =
        Node of ('a list * ('a, 'b) tree list)
      | Leaf of ('a * 'b) list
    val tree_to_yojson :
      ('a -> Yojson.Safe.json) ->
      ('b -> Yojson.Safe.json) -> ('a, 'b) tree -> Yojson.Safe.json
    val tree_of_yojson :
      (Yojson.Safe.json -> 'a Ppx_deriving_yojson_runtime.error_or) ->
      (Yojson.Safe.json -> 'b Ppx_deriving_yojson_runtime.error_or) ->
      Yojson.Safe.json -> ('a, 'b) tree Ppx_deriving_yojson_runtime.error_or
    val height : ('a, 'b) tree -> Tjr_btree.Isa_export.Arith.nat
    val dest_Node : ('a, 'b) tree -> 'a list * ('a, 'b) tree list
    val tree_equal : ('a, 'b) tree -> ('a, 'b) tree -> bool
    val tree_to_leaves : ('a, 'b) tree -> ('a * 'b) list list
    val tree_to_kvs : ('a, 'b) tree -> ('a * 'b) list
    val tree_to_keys : ('a, 'b) tree -> 'a Tjr_btree.Isa_export.Set.set
    val wellformed_tree :
      unit Tjr_btree.Isa_export.Prelude.constants_ext ->
      Tjr_btree.Isa_export.Prelude.min_size_t option ->
      ('a -> 'a -> Tjr_btree.Isa_export.Arith.int) -> ('a, 'b) tree -> bool
  end
module Tree_stack :
  sig
    type ('k, 'a) rstack =
        ('k, 'a, unit)
        Tjr_btree.Isa_export.Searching_and_splitting.rsplit_node_ext list
    val rstack_map :
      ('a -> 'b) ->
      ('c, 'a, unit)
      Tjr_btree.Isa_export.Searching_and_splitting.rsplit_node_ext list ->
      ('c, 'b, unit)
      Tjr_btree.Isa_export.Searching_and_splitting.rsplit_node_ext list
    val no_focus :
      ('a, 'b, unit)
      Tjr_btree.Isa_export.Searching_and_splitting.rsplit_node_ext list ->
      ('a, 'b option, unit)
      Tjr_btree.Isa_export.Searching_and_splitting.rsplit_node_ext list
    val r_stk_to_rs :
      ('a, 'b, unit)
      Tjr_btree.Isa_export.Searching_and_splitting.rsplit_node_ext list ->
      'b list
    val rstack_equal :
      ('a, 'b, unit)
      Tjr_btree.Isa_export.Searching_and_splitting.rsplit_node_ext list ->
      ('a, 'b, unit)
      Tjr_btree.Isa_export.Searching_and_splitting.rsplit_node_ext list ->
      bool
    val tree_to_rstack :
      ('a -> 'a -> Tjr_btree.Isa_export.Arith.int) ->
      'a ->
      ('a, 'b) Tjr_btree.Isa_export.Tree.tree ->
      Tjr_btree.Isa_export.Arith.nat ->
      ('a, 'b) Tjr_btree.Isa_export.Tree.tree *
      ('a, ('a, 'b) Tjr_btree.Isa_export.Tree.tree, unit)
      Tjr_btree.Isa_export.Searching_and_splitting.rsplit_node_ext list
    val rstack_get_bounds :
      ('a, 'b, unit)
      Tjr_btree.Isa_export.Searching_and_splitting.rsplit_node_ext list ->
      'a option * 'a option
    val add_new_stack_frame :
      ('a -> 'a -> Tjr_btree.Isa_export.Arith.int) ->
      'a ->
      'a list * 'b list ->
      ('a, 'b, unit)
      Tjr_btree.Isa_export.Searching_and_splitting.rsplit_node_ext list ->
      ('a, 'b, unit)
      Tjr_btree.Isa_export.Searching_and_splitting.rsplit_node_ext list * 'b
  end
module Disk_node :
  sig
    type ('a, 'b, 'c) dnode =
      ('a, 'b, 'c) Tjr_btree.Isa_export.Disk_node.dnode =
        Disk_node of ('a list * 'c list)
      | Disk_leaf of ('a * 'b) list
    val dnode_to_yojson :
      ('a -> Yojson.Safe.json) ->
      ('b -> Yojson.Safe.json) ->
      ('c -> Yojson.Safe.json) -> ('a, 'b, 'c) dnode -> Yojson.Safe.json
    val dnode_of_yojson :
      (Yojson.Safe.json -> 'a Ppx_deriving_yojson_runtime.error_or) ->
      (Yojson.Safe.json -> 'b Ppx_deriving_yojson_runtime.error_or) ->
      (Yojson.Safe.json -> 'c Ppx_deriving_yojson_runtime.error_or) ->
      Yojson.Safe.json ->
      ('a, 'b, 'c) dnode Ppx_deriving_yojson_runtime.error_or
    val mk_Disk_node : 'a list * 'b list -> ('a, 'c, 'b) dnode
    val dest_Disk_leaf : ('a, 'b, 'c) dnode -> ('a * 'b) list
    val dest_Disk_node : ('a, 'b, 'c) dnode -> 'a list * 'c list
  end
module Params :
  sig
    type ('a, 'b, 'c, 'd, 'e) store_ops_ext =
      ('a, 'b, 'c, 'd, 'e) Tjr_btree.Isa_export.Params.store_ops_ext =
        Store_ops_ext of
          ('c ->
           'd ->
           'd *
           ('a, 'b, 'c) Tjr_btree.Isa_export.Disk_node.dnode
           Tjr_btree.Isa_export.Util.res) *
          (('a, 'b, 'c) Tjr_btree.Isa_export.Disk_node.dnode ->
           'd -> 'd * 'c Tjr_btree.Isa_export.Util.res) *
          ('c list -> 'd -> 'd * unit Tjr_btree.Isa_export.Util.res) * 'e
    type ('a, 'b, 'c, 'd) ps1 =
      ('a, 'b, 'c, 'd) Tjr_btree.Isa_export.Params.ps1 =
        Ps1 of
          (unit Tjr_btree.Isa_export.Prelude.constants_ext *
           (('a -> 'a -> Tjr_btree.Isa_export.Arith.int) *
            ('a, 'b, 'c, 'd, unit) store_ops_ext))
    val dummy : unit
    val dot_cmp :
      ('a, 'b, 'c, 'd) ps1 -> 'a -> 'a -> Tjr_btree.Isa_export.Arith.int
    val dot_constants :
      ('a, 'b, 'c, 'd) ps1 -> unit Tjr_btree.Isa_export.Prelude.constants_ext
    val dot_store_ops :
      ('a, 'b, 'c, 'd) ps1 -> ('a, 'b, 'c, 'd, unit) store_ops_ext
    val store_free :
      ('a, 'b, 'c, 'd, 'e) store_ops_ext ->
      'c list -> 'd -> 'd * unit Tjr_btree.Isa_export.Util.res
    val store_read :
      ('a, 'b, 'c, 'd, 'e) store_ops_ext ->
      'c ->
      'd ->
      'd *
      ('a, 'b, 'c) Tjr_btree.Isa_export.Disk_node.dnode
      Tjr_btree.Isa_export.Util.res
    val store_alloc :
      ('a, 'b, 'c, 'd, 'e) store_ops_ext ->
      ('a, 'b, 'c) Tjr_btree.Isa_export.Disk_node.dnode ->
      'd -> 'd * 'c Tjr_btree.Isa_export.Util.res
  end
module Find :
  sig
    type ('a, 'b, 'c) find_state =
        ('a, 'b, 'c) Tjr_btree.Isa_export.Find.find_state
    val find_state_to_yojson :
      ('a -> Yojson.Safe.json) ->
      ('b -> Yojson.Safe.json) ->
      ('c -> Yojson.Safe.json) -> ('a, 'b, 'c) find_state -> Yojson.Safe.json
    val find_state_of_yojson :
      (Yojson.Safe.json -> 'a Ppx_deriving_yojson_runtime.error_or) ->
      (Yojson.Safe.json -> 'b Ppx_deriving_yojson_runtime.error_or) ->
      (Yojson.Safe.json -> 'c Ppx_deriving_yojson_runtime.error_or) ->
      Yojson.Safe.json ->
      ('a, 'b, 'c) find_state Ppx_deriving_yojson_runtime.error_or
    val find_step :
      ('a, 'b, 'c, 'd) Tjr_btree.Isa_export.Params.ps1 ->
      ('a, 'b, 'c) find_state ->
      'd -> 'd * ('a, 'b, 'c) find_state Tjr_btree.Isa_export.Util.res
    val mk_find_state : 'a -> 'b -> ('a, 'c, 'b) find_state
    val wf_store_tree :
      ('a -> 'b -> ('c, 'd) Tjr_btree.Isa_export.Tree.tree option) ->
      'a -> 'b -> ('c, 'd) Tjr_btree.Isa_export.Tree.tree -> bool
    val dest_f_finished :
      ('a, 'b, 'c) find_state ->
      ('c *
       ('a *
        ('c *
         (('a * 'b) list *
          ('a, 'c, unit)
          Tjr_btree.Isa_export.Searching_and_splitting.rsplit_node_ext list))))
      option
    val wellformed_find_state :
      ('a -> 'a -> Tjr_btree.Isa_export.Arith.int) ->
      ('b -> 'c -> ('a, 'd) Tjr_btree.Isa_export.Tree.tree option) ->
      ('a, 'd) Tjr_btree.Isa_export.Tree.tree ->
      'b -> ('a, 'd, 'c) find_state -> bool
  end
module Pre_insert :
  sig
    val split_leaf :
      unit Tjr_btree.Isa_export.Prelude.constants_ext ->
      ('a * 'b) list -> ('a * 'b) list * ('a * ('a * 'b) list)
    val split_node :
      unit Tjr_btree.Isa_export.Prelude.constants_ext ->
      'a list * 'b list -> ('a list * 'b list) * ('a * ('a list * 'b list))
  end
module Insert :
  sig
    type ('a, 'b, 'c) i12_t =
      ('a, 'b, 'c) Tjr_btree.Isa_export.Insert.i12_t =
        I1 of 'c
      | I2 of ('c * ('a * 'c))
    val i12_t_to_yojson :
      ('a -> Yojson.Safe.json) ->
      ('b -> Yojson.Safe.json) ->
      ('c -> Yojson.Safe.json) -> ('a, 'b, 'c) i12_t -> Yojson.Safe.json
    val i12_t_of_yojson :
      (Yojson.Safe.json -> 'a Ppx_deriving_yojson_runtime.error_or) ->
      (Yojson.Safe.json -> 'b Ppx_deriving_yojson_runtime.error_or) ->
      (Yojson.Safe.json -> 'c Ppx_deriving_yojson_runtime.error_or) ->
      Yojson.Safe.json ->
      ('a, 'b, 'c) i12_t Ppx_deriving_yojson_runtime.error_or
    type ('a, 'b, 'c) insert_state =
      ('a, 'b, 'c) Tjr_btree.Isa_export.Insert.insert_state =
        I_down of (('a, 'b, 'c) Tjr_btree.Isa_export.Find.find_state * 'b)
      | I_up of
          (('a, 'b, 'c) i12_t *
           ('a, 'c, unit)
           Tjr_btree.Isa_export.Searching_and_splitting.rsplit_node_ext list)
      | I_finished of 'c
    val insert_state_to_yojson :
      ('a -> Yojson.Safe.json) ->
      ('b -> Yojson.Safe.json) ->
      ('c -> Yojson.Safe.json) ->
      ('a, 'b, 'c) insert_state -> Yojson.Safe.json
    val insert_state_of_yojson :
      (Yojson.Safe.json -> 'a Ppx_deriving_yojson_runtime.error_or) ->
      (Yojson.Safe.json -> 'b Ppx_deriving_yojson_runtime.error_or) ->
      (Yojson.Safe.json -> 'c Ppx_deriving_yojson_runtime.error_or) ->
      Yojson.Safe.json ->
      ('a, 'b, 'c) insert_state Ppx_deriving_yojson_runtime.error_or
    val insert_step :
      ('a, 'b, 'c, 'd) Tjr_btree.Isa_export.Params.ps1 ->
      ('a, 'b, 'c) insert_state ->
      'd -> 'd * ('a, 'b, 'c) insert_state Tjr_btree.Isa_export.Util.res
    val dest_i_finished : ('a, 'b, 'c) insert_state -> 'c option
    val mk_insert_state : 'a -> 'b -> 'c -> ('a, 'b, 'c) insert_state
    val wellformed_insert_state :
      unit Tjr_btree.Isa_export.Prelude.constants_ext ->
      ('a -> 'a -> Tjr_btree.Isa_export.Arith.int) ->
      ('b -> 'c -> ('a, 'd) Tjr_btree.Isa_export.Tree.tree option) ->
      ('a, 'd) Tjr_btree.Isa_export.Tree.tree ->
      'b -> 'a -> 'd -> ('a, 'd, 'c) insert_state -> bool
  end
module Delete2 :
  sig
    type ('a, 'b, 'c) del_t =
      ('a, 'b, 'c) Tjr_btree.Isa_export.Delete2.del_t =
        D_small_leaf of ('a * 'b) list
      | D_small_node of ('a list * 'c list)
      | D_updated_subtree of 'c
    val del_t_to_yojson :
      ('a -> Yojson.Safe.json) ->
      ('b -> Yojson.Safe.json) ->
      ('c -> Yojson.Safe.json) -> ('a, 'b, 'c) del_t -> Yojson.Safe.json
    val del_t_of_yojson :
      (Yojson.Safe.json -> 'a Ppx_deriving_yojson_runtime.error_or) ->
      (Yojson.Safe.json -> 'b Ppx_deriving_yojson_runtime.error_or) ->
      (Yojson.Safe.json -> 'c Ppx_deriving_yojson_runtime.error_or) ->
      Yojson.Safe.json ->
      ('a, 'b, 'c) del_t Ppx_deriving_yojson_runtime.error_or
    type ('a, 'b, 'c) delete_state =
      ('a, 'b, 'c) Tjr_btree.Isa_export.Delete2.delete_state =
        D_down of (('a, 'b, 'c) Tjr_btree.Isa_export.Find.find_state * 'c)
      | D_up of
          (('a, 'b, 'c) del_t *
           (('a, 'c, unit)
            Tjr_btree.Isa_export.Searching_and_splitting.rsplit_node_ext list *
            'c))
      | D_finished of 'c
    val delete_state_to_yojson :
      ('a -> Yojson.Safe.json) ->
      ('b -> Yojson.Safe.json) ->
      ('c -> Yojson.Safe.json) ->
      ('a, 'b, 'c) delete_state -> Yojson.Safe.json
    val delete_state_of_yojson :
      (Yojson.Safe.json -> 'a Ppx_deriving_yojson_runtime.error_or) ->
      (Yojson.Safe.json -> 'b Ppx_deriving_yojson_runtime.error_or) ->
      (Yojson.Safe.json -> 'c Ppx_deriving_yojson_runtime.error_or) ->
      Yojson.Safe.json ->
      ('a, 'b, 'c) delete_state Ppx_deriving_yojson_runtime.error_or
    val delete_step :
      ('a, 'b, 'c, 'd) Tjr_btree.Isa_export.Params.ps1 ->
      ('a, 'b, 'c) delete_state ->
      'd -> 'd * ('a, 'b, 'c) delete_state Tjr_btree.Isa_export.Util.res
    val dest_d_finished : ('a, 'b, 'c) delete_state -> 'c option
    val mk_delete_state : 'a -> 'b -> ('a, 'c, 'b) delete_state
    val wellformed_delete_state :
      unit Tjr_btree.Isa_export.Prelude.constants_ext ->
      ('a -> 'a -> Tjr_btree.Isa_export.Arith.int) ->
      ('b -> 'c -> ('a, 'd) Tjr_btree.Isa_export.Tree.tree option) ->
      ('a, 'd) Tjr_btree.Isa_export.Tree.tree ->
      'b -> 'a -> ('a, 'd, 'c) delete_state -> bool
  end
module Insert_many :
  sig
    type ('a, 'b, 'c) fo =
      ('a, 'b, 'c) Tjr_btree.Isa_export.Insert_many.fo =
        I1 of ('c * ('a * 'b) list)
      | I2 of (('c * ('a * 'c)) * ('a * 'b) list)
    type ('a, 'b, 'c) ist =
      ('a, 'b, 'c) Tjr_btree.Isa_export.Insert_many.ist =
        I_down of
          (('a, 'b, 'c) Tjr_btree.Isa_export.Find.find_state *
           ('b * ('a * 'b) list))
      | I_up of
          (('a, 'b, 'c) fo *
           ('a, 'c, unit)
           Tjr_btree.Isa_export.Searching_and_splitting.rsplit_node_ext list)
      | I_finished of ('c * ('a * 'b) list)
    val insert_step :
      ('a, 'b, 'c, 'd) Tjr_btree.Isa_export.Params.ps1 ->
      ('a, 'b, 'c) ist ->
      'd -> 'd * ('a, 'b, 'c) ist Tjr_btree.Isa_export.Util.res
    val dest_i_finished : ('a, 'b, 'c) ist -> ('c * ('a * 'b) list) option
    val mk_insert_state :
      'a -> 'b -> ('a * 'b) list -> 'c -> ('a, 'b, 'c) ist
  end
module Leaf_stream :
  sig
    type ('a, 'b, 'c) ls_state =
        ('a, 'b, 'c) Tjr_btree.Isa_export.Leaf_stream.ls_state
    val lss_step :
      ('a, 'b, 'c, 'd) Tjr_btree.Isa_export.Params.ps1 ->
      ('a, 'b, 'c) ls_state ->
      'd -> 'd * ('a, 'b, 'c) ls_state Tjr_btree.Isa_export.Util.res
    val mk_ls_state : 'a -> ('b, 'c, 'a) ls_state
    val dest_LS_leaf : ('a, 'b, 'c) ls_state -> ('a * 'b) list option
    val lss_is_finished : ('a, 'b, 'c) ls_state -> bool
  end
